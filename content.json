{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"Jenior","url":"https://jenior.github.io"},"pages":[{"title":"","date":"2017-10-30T09:17:58.879Z","updated":"2017-10-30T09:17:58.879Z","comments":false,"path":"tags/index.html","permalink":"https://jenior.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2017-10-30T09:15:49.501Z","updated":"2017-10-30T09:15:49.501Z","comments":false,"path":"categories/index.html","permalink":"https://jenior.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"SpringBoot配置","slug":"SpringBoot配置","date":"2017-11-24T02:48:38.000Z","updated":"2017-11-24T02:58:23.041Z","comments":true,"path":"2017/11/24/SpringBoot配置/","link":"","permalink":"https://jenior.github.io/2017/11/24/SpringBoot配置/","excerpt":"","text":"1、SpringBoot介绍Spring Boot是伴随着Spring4.0 产生的，是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。Spring Boot让我们的Spring应用变得更轻量化。比如：你可以仅仅依靠一个Java类来运行Spring引用。你也可以打包你的应用为jar并通过使用java –jar来运行你的Spring Web应用。Spring Boot的主要优点： 为所有Spring开发者更快的入门 开箱即用，提供各种默认配置来简化项目配置 嵌入Tomcat, Jetty Undertow 而且不需要部署他们 没有冗余代码生成和xml配置的要求 提供生产指标,健壮检查和外部化配置 尽可能的根据项目依赖来自动配置Spring框架 当然，springboot也存在它的缺点： 依赖太多，随便的一个Spring Boot应用都有好几十M 缺少服务的注册和发现等解决方案，可以结合springcloud的组件使用。 缺少监控集成方案、安全管理方案（有但简单，满足不了生产的指标 ： Actuator）","categories":[],"tags":[{"name":"java","slug":"java","permalink":"https://jenior.github.io/tags/java/"}]}]}